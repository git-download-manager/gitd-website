# path 
proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=gitd_website:10m inactive=2h max_size=1g use_temp_path=off;

#geo $purge_allowed {
#    default         0;
#    127.0.0.1       1;
#}

#map $request_method $purge_method {
#    PURGE   $purge_allowed;
#    default 0;
#}

server {
    listen                  IPADDR:443 ssl http2 reuseport;
    server_name             DOMAIN_NAME;
    root                    /var/www/DOMAIN_NAME/public;

    # SSL
    ssl_certificate         /etc/letsencrypt/live/DOMAIN_NAME/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/DOMAIN_NAME/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/DOMAIN_NAME/chain.pem;

    # security
    include                 nginxconfig.io/security.conf;

    # restrict methods
    if ($request_method !~ ^(GET)$) {
        return '405';
    }

    # logging
    access_log /var/log/nginx/DOMAIN_NAME.access.log;
    error_log  /var/log/nginx/DOMAIN_NAME.error.log warn;

    # reverse proxy
    location / {
        proxy_pass http://127.0.0.1:3001;

        # proxy cache directives
        proxy_buffering        on;
        proxy_cache_revalidate on;
        proxy_cache            gitd_website;
        proxy_cache_methods    GET;
        proxy_cache_key        $uri;
        proxy_cache_valid      200  2h;
        proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock       on;
        #proxy_cache_purge      $purge_method;

        # proxy cache header: https://www.nginx.com/blog/nginx-caching-guide/
        add_header X-Cache-Status $upstream_cache_status;
        # proxy cache directives

        include    nginxconfig.io/proxy.conf;
    }

    # additional config
    include nginxconfig.io/general.conf;
}

# HTTP redirect
server {
    listen      IPADDR:80 reuseport;
    server_name DOMAIN_NAME;
    include     nginxconfig.io/letsencrypt.conf;

    location / {
        return 301 https://DOMAIN_NAME$request_uri;
    }
}