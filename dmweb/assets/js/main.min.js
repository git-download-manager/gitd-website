"use strict";function GitdZip(){}document.addEventListener("alpine:init",()=>{Alpine.data("gitdManager",()=>({gitdDebugMode:!1,isDebugActive(){return void 0!=window.gitdDebugMode&&window.gitdDebugMode!=this.gitdDebugMode&&(this.gitdDebugMode=window.gitdDebugMode),window.gitdDebugMode},ErrorDownloadRunning:"Please wait until the download is finished.",ErrorSelectLimitExceed:"Maximum selection limit exceeded",ErrorApiResponseWaiting:"Please wait until the process is finished.",ErrorDownloadFilesNotFound:"No download files found!!! Process canceled.",ErrorServer502:"Something wrong. Please try again after a while...",ErrorUnknownUrl:"Please write a valid repository url.",DownloadNone:-1,DownloadFullPackage:1,DownloadPartialPackage:2,DownloadSingleFile:3,DownloadCustomPackage:4,modal:!1,toggleModal(){this.modal=!this.modal},dropdown:!1,toggleDropdown(){this.isDebugActive()&&console.log("toggle dropdown",this.dropdown),this.dropdown=!this.dropdown},homeSection:!0,filterSection:!1,viewSection:!1,resetSection(){this.homeSection=!0,this.filterSection=!1,this.viewSection=!1},loading:!1,gitUrl:"",gitUrlValid:!0,gitBranch:"",checkLoadingActive(){this.downloadProgress&&!this.isFinished?this.loading=!0:this.loading=!1},validateGitUrl(){this.gitUrlValid=/https:\/\/(github\.com|bitbucket\.org|gitlab\.com)(\S+)(\/|\/([\w#!:.?+=&%@!\-\/]))?/sg.test(this.gitUrl)},selectList:{},getAllSelectList(){return Object.keys(this.selectList).join(", ")},addSelectList(e,t){this.selectList[e]=t},removeSelectList(e){delete this.selectList[e]},resetSelectList(){this.selectList={};let e=document.querySelectorAll("input.tree-checkbox");e.length>0&&[...e].map(e=>{e.checked=!1})},toggleSelectList(e,t){if(this.loading)return this.showNotifyBox("alert-warning",this.ErrorDownloadRunning,3e3),!1;if(this.selectList.hasOwnProperty(e))this.removeSelectList(e);else{if(!(this.selectListLimit>Object.keys(this.selectList).length))return this.showNotifyBox("alert-warning",this.ErrorSelectLimitExceed,3e3),this.isDebugActive()&&console.log("selectList",this.selectList,Object.keys(this.selectList).length,this.selectListLimit),!1;this.addSelectList(e,t)}return Object.keys(this.selectList).length>0?this.showAlertBox("alert-default",'<a href="javascript:void(0);" @click="submitAction(\'download\'); removeAlertBox();" class="btn btn-sm btn-warning"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16"><path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5z"/><path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708l3 3z"/></svg><span class="nav-link-inner--text">Start Download</span></a> <span x-text="getAllSelectList" class="small"></span>'):this.removeAlertBox(),this.isDebugActive()&&console.log("selectList",this.selectList,this.selectListLimit),!0},selectListLimit:5,currentBranch:"",archiveUrl:"",fileUrlPattern:"",packageName:"",treeList:[],breadcrumbList:[],isTreePath:e=>e.startsWith("tree:"),isFilePath:e=>e.startsWith("blob:"),submitAction(e="view",t="",i=0,s=""){if(this.isDebugActive()&&console.log("submitAction",e,t,i,s),this.loading){this.showNotifyBox("alert-warning",this.ErrorDownloadRunning,3e3);return}if(this.loading=!0,this.validateGitUrl(),!this.gitUrlValid){this.loading=!1,this.showNotifyBox("alert-warning",this.ErrorUnknownUrl,3e3);return}this.showNotifyBox("alert-info",this.ErrorApiResponseWaiting,-1),this.isDebugActive()&&console.log("post-data",JSON.stringify({url:this.gitUrl,branch:this.gitBranch,action:e,sub:t,direction:i,filename:s,select_list:this.selectList})),fetch("http://localhost:3002/magic",{method:"POST",body:JSON.stringify({url:this.gitUrl,branch:this.gitBranch,action:e,sub:t,direction:i,filename:s,select_list:this.selectList}),headers:{"content-type":"application/json"}}).then(e=>e.json()).then(e=>{if(this.isDebugActive()&&console.log("api-response",e),e.status){switch(this.gitUrl=e.result.query_url,this.archiveUrl=e.result.archive_url,this.fileUrlPattern=e.result.url_pattern,this.currentBranch=this.gitBranch=e.result.branch,this.treeList=e.result.tree_list,this.breadcrumbList=e.result.breadcrumb_list,this.packageName=e.result.package_name,this.homeSection=!1,this.filterSection=!0,this.viewSection=!0,this.isDebugActive()&&console.log("download_type",e.result.download_type),e.result.download_type){case this.DownloadNone:this.isDebugActive()&&console.log("DownloadNone");break;case this.DownloadFullPackage:this.isDebugActive()&&console.log("DownloadFullPackage"),this.downloadFullPackage(this.archiveUrl,this.currentBranch+".zip");break;case this.DownloadPartialPackage:case this.DownloadCustomPackage:this.isDebugActive()&&console.log("DownloadPartialPackage","or","DownloadCustomPackage");let t=this;if(e.result.download_tree_list.length>0){this._startDownloadProcess(e.result.download_tree_list.length,this.packageName);let i=new GitdZip;i.treeListPrefix=this._generateSingleFilePath(this.breadcrumbList),i.treeList=e.result.download_tree_list,i.zipFilename=this.packageName,i.fileUrlPattern=this.fileUrlPattern,i.save=this.downloadPartialPackage,i.init(),i.handleTreeListStream(),i.start().then(function(){i.download()}).then(function(){i.end(),t._finishDownloadProcess()})}else this.showNotifyBox("alert-warning",this.ErrorDownloadFilesNotFound,5e3);break;case this.DownloadSingleFile:this.isDebugActive()&&console.log("DownloadSingleFile");let s=this._findUrl2Filename(e.result.url),o=this._generateSingleFilePath(this.breadcrumbList,s),r=this._generateSingleFileUrl(this.fileUrlPattern,o);fetch(r,{method:"GET"}).then(e=>e.blob()).then(e=>{this.downloadPartialPackage([e],this._findUrl2Filename(r))})}this.checkLoadingActive(),this.removeNotifyBox()}else this.loading=!1,this.gitUrlValid=!1,this._finishDownloadProcess(),this.showNotifyBox("alert-warning",e.message,5e3)}).catch(e=>{this.isDebugActive()&&console.warn("fetch Error",e),this.loading=!1,this.gitUrlValid=!1,this._finishDownloadProcess(),this.showNotifyBox("alert-danger",this.ErrorServer502,8e3)})},_findUrl2Filename:e=>new URL(e).pathname.split("/").pop(),_generateSingleFilePath(e,t){let i=[];if(e.length>0)for(let s in e)0!=s&&i.push(e[s]);return""!=t&&i.push(t),i.join("/")},_generateSingleFileUrl:(e,t)=>e.replace("[PATH]",t),treeSplit:e=>e.split(":"),getTreeType(e){return this.treeSplit(e)[0]},getTreeSize(e){return this.formatBytes(this.treeSplit(e)[1])},getTreePath(e){return this.treeSplit(e)[2]},formatBytes(e,t=2){if("-"===e)return"-";if(0===e)return"0 Bytes";let i=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,i)).toFixed(t<0?0:t))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][i]},notifyBox:!1,notifyType:"",notifyMessage:"",async showNotifyBox(e,t,i){this.isDebugActive()&&console.log("showNotifyBox",e,t),this.notifyBox=!0,this.notifyType=e,this.notifyMessage=t,i>0&&setTimeout(()=>{this.isDebugActive()&&console.log("removeNotifyBox"),this.removeNotifyBox()},i)},removeNotifyBox(){this.notifyBox=!1,this.notifyType="",this.notifyMessage=""},alertBox:!1,alertType:"",alertMessage:"",showAlertBox(e,t){this.alertBox=!0,this.alertType=e,this.alertMessage=t},removeAlertBox(){this.alertBox=!1,this.alertType="",this.alertMessage=""},downloadProgress:!1,progressPercent:0,totalFiles:0,fileCounter:0,currentFileDownload:"",currentFileZip:"",isDownloaded:!1,isZipped:!1,isFinished:!1,isStarted:!1,updateFileCounter(){this.fileCounter++},calculateProgressBar(){this.progressPercent=Math.ceil(this.fileCounter/this.totalFiles*100)},_startDownloadProcess(e,t){this.loading=!0,this.downloadProgress=!0,this.isStarted=!0,this.isFinished=this.isDownloaded=this.isZipped=!1,this.totalFiles=e+1,this.currentFileZip=t,this.progressPercent=this.fileCounter=0},_finishDownloadProcess(e=3e3){this.isFinished=!0,this.loading=!1,this.resetSelectList();let t=this;setTimeout(function(){t.totalFiles=t.fileCounter=t.progressPercent=0,t.downloadProgress=t.isStarted=t.isDownloaded=t.isZipped=!1,t.currentFileZip=t.currentFileDownload=""},e)},downloadPartialPackage(e,t){if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(new Blob(e,{type:"application/octet-stream; charset=utf-8"}),t);else{let i=document.createElement("a");document.body.appendChild(i);let s=window.URL.createObjectURL(new Blob(e,{type:"application/octet-stream; charset=utf-8"}));i.href=s,i.download=t,i.click(),setTimeout(()=>{window.URL.revokeObjectURL(s),document.body.removeChild(i)},10)}},downloadFullPackage(e,t){let i=document.createElement("a");document.body.appendChild(i),i.href=e,i.target="_blank",i.download=t,i.click(),setTimeout(()=>{window.URL.revokeObjectURL(e),document.body.removeChild(i)},10)}}))}),GitdZip.prototype.thanks="https://github.com/101arrowz/fflate/wiki/Guide:-Modern-(Buildless)",GitdZip.prototype.zip=null,GitdZip.prototype.zipFilename=null,GitdZip.prototype.zipReadableStream=null,GitdZip.prototype.treeList=null,GitdZip.prototype.treeListPrefix=null,GitdZip.prototype.save=null,GitdZip.prototype.fileUrlPattern=null,GitdZip.prototype.largeFileSize=5e5,GitdZip.prototype.incompressibleTypes=new Set(["zip","gz","png","jpg","jpeg","pdf","doc","docx","ppt","pptx","xls","xlsx","heic","heif","7z","bz2","rar","gif","webp","webm","mp4","mov","mp3","aifc"]),GitdZip.prototype.startTime=0,GitdZip.prototype.isStarted=!1,GitdZip.prototype.isFinished=!1,GitdZip.prototype.isAborted=!1,GitdZip.prototype.fileCounter=0,GitdZip.prototype.fileChuckSize=50,GitdZip.prototype.init=function(){this.zip=new fflate.Zip},GitdZip.prototype.isDebugActive=function(){return window.gitdDebugMode},GitdZip.prototype.startTimer=function(){this.startTime=new Date().getTime()},GitdZip.prototype.calculateTimer=function(e){let t=new Date().getTime()-e;return Math.floor(t/864e5)+":"+Math.floor(t%864e5/36e5)+":"+Math.floor(t%36e5/6e4)+":"+Math.floor(t%6e4/1e3)},GitdZip.prototype.setTreeList=function(e){this.treeList=e},GitdZip.prototype.setFileUrlPattern=function(e){this.fileUrlPattern=e},GitdZip.prototype._generateFileUrl=function(e){return""!=this.treeListPrefix&&(e=this.treeListPrefix+""+e),this.fileUrlPattern.replace("[PATH]",e)},GitdZip.prototype.handleTreeListStream=function(){let e=this.zip;this.zipReadableStream=new ReadableStream({start(t){e.ondata=function(e,i,s){e?t.error(e):(t.enqueue(i),s&&t.close())}},cancel(){e.terminate()}})},GitdZip.prototype.delay=function(e){let t=this;return new Promise(function(i){setTimeout(function(){t.isDebugActive()&&console.log("delay"),i()},e)})},GitdZip.prototype.start=async function(){let e=this;e.isDebugActive()&&console.log("treelist",e.treeList.length),this.startTimer();let t=e.fileChuckSize,i=this.treeList,s=Array.from({length:Math.ceil(i.length/t)||1},(e,s)=>i.slice(s*t,(s+1)*t));for(let o of s)await Promise.all(o.map(async function(t){return await e.add(t)}),e.delay(5))},GitdZip.prototype.add=async function(e){let t=this;return await fetch(this._generateFileUrl(e),{method:"GET"}).then(function(i){if(!i.body)return i;t.isDebugActive()&&console.log("current-file-download",e),document.dispatchEvent(new CustomEvent("current-file-download",{bubbles:!0,detail:e}));let s=0,o=i.headers.get("content-length"),r=o?parseInt(o,10):-1,l=e.slice(e.lastIndexOf(".")+1),n=t.incompressibleTypes.has(l)?new fflate.ZipPassThrough(e):r>t.largeFileSize?new fflate.AsyncZipDeflate(e,{level:9}):new fflate.ZipDeflate(e,{level:9});return n.mtime=new Date,t.zip.add(n),new Response(new ReadableStream({start(e){let o=i.body.getReader();return function i(){return o.read().then(({done:t,value:o})=>t?(n.push(new Uint8Array(0),!0),void e.close()):(s+=o.byteLength,n.push(o),e.enqueue(o),i())).catch(i=>{t.isDebugActive()&&console.error(i),e.error(i)})}()}}))}).then(function(i){t.isDebugActive()&&console.log("finish",e)}).catch(function(i){t.isDebugActive()&&console.log(e,i)})},GitdZip.prototype.end=function(){document.dispatchEvent(new CustomEvent("zip-file-prepare",{bubbles:!0,detail:this.zipFilename})),document.dispatchEvent(new CustomEvent("current-file-download",{bubbles:!0,detail:this.zipFilename})),this.zip.end()},GitdZip.prototype.download=function(){let e=[],t=0,i=this;this.zipReadableStream.pipeTo(new WritableStream({write(i){t+=i.length,e.push(i)},close(){document.dispatchEvent(new CustomEvent("zip-file-download",{bubbles:!0,detail:i.zipFilename})),i.save(e,i.zipFilename),i.isDebugActive()&&console.log("zip-package-save",i.calculateTimer(i.startTime))}}))};